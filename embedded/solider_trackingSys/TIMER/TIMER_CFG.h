/*
 * TIMER_CFG.h
 *
 *  Created on: Dec 10, 2019
 *      Author: Ahmed Rashad
 */

#ifndef TIMER_CFG_H_
#define TIMER_CFG_H_




/*
 * if pwm -> foc0 must = 0
 */


#define TIMER0_MODE_NORMAL   			(0x00)
#define TIMER0_MODE_PWM_PHASE_CORRECT	(0x01)
#define TIMER0_MODE_CTC					(0x02)
#define TIMER0_MODE_PWM_FAST			(0x03)

#define TIMER0_OC0_MODE_NORMAL			(0x00)
#define TIMER0_OC0_MODE_TOGGLE			(0x01)
#define TIMER0_OC0_MODE_CLEAR			(0x02)
#define TIMER0_OC0_MODE_SET				(0x03)

#define TIMER0_PWM_MODE_NON_INVERTING	(0x02)
#define TIMER0_PWM_MODE_INVERTING		(0x03)

#define TIMER0_CLOCK_NO_CLOCK			(0X00)
#define TIMER0_CLOCK_NO_PRESCALER		(0X01)
#define TIMER0_CLOCK_PRESCALAR_8		(0X02)
#define TIMER0_CLOCK_PRESCALAR_64		(0X03)
#define TIMER0_CLOCK_PRESCALAR_256		(0X04)
#define TIMER0_CLOCK_PRESCALAR_1024		(0X05)
#define TIMER0_CLOCK_EXT_FALL			(0X06)
#define TIMER0_CLOCK_EXT_RISE			(0X07)


#define TIMER0_MODE						TIMER0_MODE_CTC
#define TIMER0_OC0_MODE 				TIMER0_OC0_MODE_NORMAL
#define TIMER0_OVERFLOW_INT				0
#define TIMER0_OCR_INT					1


#define TIMER0_TICK_PER_SECOND			5000

#if TIMER0_TICK_PER_SECOND < FREQUENCY && TIMER0_MODE == TIMER0_MODE_CTC
	#if TIMER0_TICK_PER_SECOND > FREQUENCY/256
		#define TIMER0_CLOCK	TIMER0_CLOCK_NO_PRESCALER
		#define TIMER0_OCR0		((FREQUENCY/TIMER0_TICK_PER_SECOND)-1)
	#elif TIMER0_TICK_PER_SECOND > FREQUENCY/8/256
		#define TIMER0_CLOCK	TIMER0_CLOCK_PRESCALAR_8
		#define TIMER0_OCR0		((FREQUENCY/TIMER0_TICK_PER_SECOND/8)-1)
	#elif TIMER0_TICK_PER_SECOND > FREQUENCY/64/256
		#define TIMER0_CLOCK	TIMER0_CLOCK_PRESCALAR_64
		#define TIMER0_OCR0		((FREQUENCY/TIMER0_TICK_PER_SECOND/64)-1)
	#elif TIMER0_TICK_PER_SECOND > FREQUENCY/256/256
		#define TIMER0_CLOCK	TIMER0_CLOCK_PRESCALAR_256
		#define TIMER0_OCR0		((FREQUENCY/TIMER0_TICK_PER_SECOND/256)-1)
	#elif TIMER0_TICK_PER_SECOND > FREQUENCY/1024/256
		#define TIMER0_CLOCK	TIMER0_CLOCK_PRESCALAR_1024
		#define TIMER0_OCR0		((FREQUENCY/TIMER0_TICK_PER_SECOND/1024)-1)
	#else
		#error TIMER0_TICK_PER_SECOND is too low
	#endif
#else
	#error	TIMER0_TICK_PER_SECOND is too high
#endif

#if TIMER0_OCR0	>255 || TIMER0_OCR0	<0
	#error	TIMER0_OCR0 has wrong value
#endif


#define OC0 PORTB_3
#define T0 	PORTB_0

#endif /* TIMER_CFG_H_ */
